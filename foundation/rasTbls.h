//*****************************************************************************
// $Archive: /ClearPath SC-1.0.123/User Driver/inc-private/rasTbls.h $
// $Revision: 2 $ $Date: 12/09/16 4:20p $
// $Workfile: rasTbls.h $
//
// DESCRIPTION:
///		\file rasTbls.h
///		\brief C++ API: definitions for pubMnNetDefcpp
///
///		RAS selection mapping tables.
//
// CREATION DATE:
//		September 14, 2010  17:31:14
//
// COPYRIGHT NOTICE:
//		(C)Copyright 2010  Teknic, Inc.  All rights reserved.
//
//		This copyright notice must be reproduced in any copy, modification, 
//		or portion thereof merged into another program. A copy of the 
//		copyright notice must be included in the object library of a user
//		program.
//																			  *
//*****************************************************************************

static const int classicRASlen[] = {0,  7,  13,  25,  47,  75, 141,   0,
								    0,  0,   0,   0,   0,   0,   0,   0};
// Selector translate table
typedef struct _eRASlookups {
	unsigned nodeBits;				// RAS selector code
	double requestCode;				// RAS UI code
} eRASlookups;

// Table of legal enhanced RAS codes sorted by the node's 
// selector bit pattern. The requestCode is the UI representation
// of these codes.
static const eRASlookups eRASlookupTbl[] = {
{0x110,   4.01},
{0x111,   4.11},
{0x112,   5.01},
{0x113,   5.11},	
{0x114,   5.21},
{0x115,   5.31},
{0x116,   5.41},
{0x117,   5.51},	
{0x118,   6.01},
{0x119,   6.11},
{0x11A,   7.01},
{0x11B,   7.11},	
{0x11C,   7.21},
{0x11D,   8.01},
{0x11E,   8.31},
{0x11F,   9.01},	
{0x120,   9.51},
{0x121,  11.21},
{0x122,  11.31},
{0x123,  12.21},	
{0x124,  14.01},
{0x125,  15.01},
{0x126,  16.01},
{0x127,  17.31},	
{0x128,  19.51},
{0x129,  21.01},
{0x12A,  22.11},
{0x12B,  25.11},	
{0x12C,  27.11},
{0x12D,  30.11},
{0x12E,  33.01},
{0x130,   5.02},	
{0x131,   5.12},
{0x132,   5.22},
{0x133,   6.02},
{0x134,   6.12},	
{0x135,   6.22},
{0x136,   7.02},
{0x137,   7.12},
{0x138,   8.02},	
{0x139,   8.12},
{0x13A,   8.22},
{0x13B,   9.02},
{0x13C,   9.22},	
{0x13D,  11.22},
{0x13E,  11.32},
{0x13F,  12.32},
{0x140,  14.02},	
{0x141,  15.02},
{0x142,  16.02},
{0x143,  17.12},
{0x144,  19.22},	
{0x145,  21.02},
{0x146,  22.12},
{0x147,  25.12},
{0x148,  27.12},	
{0x149,  30.12},
{0x14A,  33.12},
{0x14B,  36.12},
{0x14C,  40.02},	
{0x14D,  44.02},
{0x14E,  44.12},
{0x210,   8.11},
{0x211,   8.21},	
{0x212,   9.11},
{0x213,   9.21},
{0x214,   9.31},
{0x215,   9.41},	
{0x216,  11.01},
{0x217,  11.11},
{0x218,  12.01},
{0x219,  12.11},	
{0x21A,  13.01},
{0x21B,  14.11},
{0x21C,  14.21},
{0x21D,  15.11},	
{0x21E,  17.21},
{0x21F,  18.01},
{0x220,  19.41},
{0x221,  21.31},	
{0x222,  22.01},
{0x223,  25.01},
{0x224,  27.01},
{0x225,  30.01},	
{0x226,  32.01},
{0x227,  34.01},
{0x228,  38.51},
{0x229,  41.01},	
{0x22A,  45.11},
{0x22B,  50.11},
{0x22C,  54.11},
{0x22D,  60.01},	
{0x22E,  65.01},
{0x230,   9.12},
{0x231,  11.02},
{0x232,  11.12},	
{0x233,  12.02},
{0x234,  12.12},
{0x235,  12.22},
{0x236,  13.02},	
{0x237,  14.12},
{0x238,  15.12},
{0x239,  15.22},
{0x23A,  17.02},	
{0x23B,  18.02},
{0x23C,  19.12},
{0x23D,  21.32},
{0x23E,  22.02},	
{0x23F,  25.02},
{0x240,  27.02},
{0x241,  30.02},
{0x242,  32.02},	
{0x243,  34.02},
{0x244,  38.22},
{0x245,  41.02},
{0x246,  45.12},	
{0x247,  50.12},
{0x248,  54.12},
{0x249,  60.02},
{0x24A,  66.12},	
{0x24B,  72.02},
{0x24C,  79.02},
{0x24D,  89.02},
{0x24E,  89.12},	
{0x310,  17.01},
{0x311,  17.11},
{0x312,  19.01},
{0x313,  19.11},	
{0x314,  19.21},
{0x315,  19.31},
{0x316,  21.11},
{0x317,  21.21},	
{0x318,  24.01},
{0x319,  24.11},
{0x31A,  26.01},
{0x31B,  28.01},	
{0x31C,  28.11},
{0x31D,  31.01},
{0x31E,  33.31},
{0x31F,  36.01},	
{0x320,  38.41},
{0x321,  43.21},
{0x322,  45.01},
{0x323,  50.01},	
{0x324,  54.01},
{0x325,  59.01},
{0x326,  64.01},
{0x327,  69.01},	
{0x328,  76.51},
{0x329,  83.01},
{0x32A,  90.11},
{0x32B,  99.11},	
{0x32C, 109.11},
{0x32D, 121.01},
{0x32E, 130.01},
{0x330,  19.02},	
{0x331,  21.12},
{0x332,  21.22},
{0x333,  24.02},
{0x334,  24.12},	
{0x335,  24.22},
{0x336,  26.02},
{0x337,  28.02},
{0x338,  31.02},	
{0x339,  31.12},
{0x33A,  33.02},
{0x33B,  36.02},
{0x33C,  38.12},	
{0x33D,  43.22},
{0x33E,  45.02},
{0x33F,  50.02},
{0x340,  54.02},	
{0x341,  59.02},
{0x342,  64.02},
{0x343,  69.02},
{0x344,  76.22},	
{0x345,  83.02},
{0x346,  90.12},
{0x347,  99.12},
{0x348, 109.12},	
{0x349, 121.02},
{0x34A, 133.12},
{0x34B, 144.02},
{0x34C, 159.02},
{0x34D, 178.02},
{0x34E, 178.12},
{0x410,  33.11},
{0x411,  33.21},	
{0x412,	 38.01},
{0x413,	 38.11},
{0x414,	 38.21},
{0x415,	 38.31},
{0x416,	 43.01},
{0x417,	 43.11},
{0x418,	 47.01},
{0x419,	 47.11},
{0x41A,	 52.01},
{0x41B,	 57.01},
{0x41C,	 57.11},
{0x41D,	 62.01},
{0x41E,	 66.21},
{0x41F,	 71.01},
{0x420,	 76.41},
{0x421,	 85.21},
{0x422,	 90.01},
{0x423,	 99.01},
{0x424,	109.01},
{0x425,	118.01},
{0x426,	128.01},
{0x427,	137.01},
{0x428,	152.51},
{0x429,	166.01},
{0x42A,	180.11},
{0x42B,	199.11},
{0x42C,	218.11},
{0x42D,	242.01},
{0x42E,	261.01},
{0x430,	 38.02},
{0x431,	 43.02},
{0x432,	 43.12},
{0x433,	 47.02},
{0x434,	 47.12},
{0x435,	 47.22},
{0x436,	 52.02},
{0x437,	 57.02},
{0x438,	 62.02},
{0x439,	 62.12},
{0x43A,	 66.02},
{0x43B,	 71.02},
{0x43C,	 76.12},
{0x43C,  76.12},
{0x43D,  85.22},
{0x43E,  90.02},
{0x43F,  99.02},	
{0x440, 109.02},
{0x441, 118.02},
{0x442, 128.02},
{0x443, 137.02},  
{0x444, 152.22},
{0x445, 166.02},
{0x446, 180.12},
{0x447, 199.12},
{0x448, 218.12},
{0x449, 242.02},
{0x44A, 265.12},
{0x44B, 289.02},	
{0x44C, 317.02},
{0x44D, 355.02},
{0x44E, 355.12},
{0x510,  66.01},	
{0x511,  66.11},
{0x512,  76.01},
{0x513,  76.11},
{0x514,  76.21},	
{0x515,  76.31},
{0x516,  85.01},
{0x517,  85.11},
{0x518,  95.01},	
{0x519,  95.11},
{0x51A, 104.01},
{0x51B, 114.01},
{0x51C, 114.11},	
{0x51D, 123.01},
{0x51E, 133.21},
{0x51F, 142.01},
{0x520, 152.41},	
{0x521, 171.21},
{0x522, 180.01},
{0x523, 199.01},
{0x524, 218.01},	
{0x525, 237.01},
{0x526, 256.01},
{0x527, 275.01},
{0x528, 303.11},	
{0x529, 332.01},
{0x52A, 360.11},
{0x52B, 398.11},
{0x52C, 436.11},	
{0x52D, 483.01},
{0x52E, 521.01},
{0x530,  76.02},
{0x531,  85.02},	
{0x532,  85.12},
{0x533,  95.02},
{0x534,  95.12},
{0x535,  95.22},	
{0x536, 104.02},
{0x537, 114.02},
{0x538, 123.02},
{0x539, 123.12},	
{0x53A, 133.02},
{0x53B, 142.02},
{0x53C, 152.12},
{0x53D, 171.22},	
{0x53E, 180.02},
{0x53F, 199.02},
{0x540, 218.02},
{0x541, 237.02},	
{0x542, 256.02},
{0x543, 275.02},
{0x544, 303.12},
{0x545, 332.02},	
{0x546, 360.12},
{0x547, 398.12},
{0x548, 436.12},
{0x549, 483.02},	
{0x54A, 530.02},
{0x54B, 578.02},
{0x54C, 635.02},
{0x54D, 710.02},	
{0x54E, 710.12},
{0x610, 133.01},
{0x611, 133.11},
{0x612, 152.01},	
{0x613, 152.11},
{0x614, 152.21},
{0x615, 152.31},
{0x616, 171.01},	
{0x617, 171.11},
{0x618, 189.01},
{0x619, 189.11},
{0x61A, 208.01},	
{0x61B, 227.01},
{0x61C, 227.11},
{0x61D, 246.01},
{0x61E, 265.01},	
{0x61F, 284.01},
{0x620, 303.01},
{0x621, 341.01},
{0x622, 360.01},	
{0x623, 398.01},
{0x624, 436.01},
{0x625, 474.01},
{0x626, 512.01},	
{0x627, 549.01},
{0x628, 606.01},
{0x629, 663.01},
{0x62A, 720.01},	
{0x62B, 796.01},
{0x62C, 872.01},
{0x62D, 966.01},
{0x62E,1042.01},	
{0x630, 152.02},
{0x631, 171.02},
{0x632, 171.12},
{0x633, 189.02},	
{0x634, 189.12},
{0x635, 189.22},
{0x636, 208.02},
{0x637, 227.02},	
{0x638, 246.02},
{0x639, 246.12},
{0x63A, 265.02},
{0x63B, 284.02},	
{0x63C, 303.02},
{0x63D, 341.02},
{0x63E, 360.02},
{0x63F, 398.02},	
{0x640, 436.02},
{0x641, 474.02},
{0x642, 512.02},
{0x643, 549.02},	
{0x644, 606.02},
{0x645, 663.02},
{0x646, 720.02},
{0x647, 796.02},	
{0x648, 872.02},
{0x649, 966.02},
{0x64A,1061.02},
{0x64B,1156.02},	
{0x64C,1269.02},
{0x64D,1421.02},
{0x64E,1421.12}
};